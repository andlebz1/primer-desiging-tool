{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf840
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # app.py\
# Primer Designing Tool with Gradio Interface\
\
import gradio as gr\
\
# ------------------ Core Functions ------------------\
def reverse_complement(seq):\
    complement = \{"A":"T", "T":"A", "G":"C", "C":"G"\}\
    return "".join(complement.get(base, base) for base in reversed(seq.upper()))\
\
def gc_content(seq):\
    gc = seq.upper().count("G") + seq.upper().count("C")\
    return round((gc/len(seq))*100,2)\
\
def melting_temp(seq):\
    a = seq.upper().count("A")\
    t = seq.upper().count("T")\
    g = seq.upper().count("G")\
    c = seq.upper().count("C")\
    return 2*(a+t) + 4*(g+c)\
\
def design_primers(dna_seq, primer_length=20):\
    dna_seq = dna_seq.upper()\
    if len(dna_seq) < primer_length:\
        return "Error: DNA sequence is shorter than primer length!"\
    \
    fwd = dna_seq[:primer_length]\
    rev = reverse_complement(dna_seq[-primer_length:])\
    \
    primers = f"""\
===== Primer Design Report =====\
\
Forward Primer: \{fwd\}\
Forward GC%: \{gc_content(fwd)\}\
Forward Tm: \{melting_temp(fwd)\}\
\
Reverse Primer: \{rev\}\
Reverse GC%: \{gc_content(rev)\}\
Reverse Tm: \{melting_temp(rev)\}\
"""\
    return primers\
\
# ------------------ Gradio Interface ------------------\
def run_primer_tool(seq, length):\
    return design_primers(seq, length)\
\
iface = gr.Interface(\
    fn=run_primer_tool,\
    inputs=[\
        gr.Textbox(lines=5, placeholder="Paste DNA sequence here"),\
        gr.Slider(10, 30, value=20, step=1, label="Primer Length")\
    ],\
    outputs="text",\
    title="Primer Designing Tool",\
    description="Design forward and reverse primers from a DNA sequence. Calculates GC content and melting temperature."\
)\
\
iface.launch()\
}